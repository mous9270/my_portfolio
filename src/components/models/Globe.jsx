/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
"use client";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

const HatModel = React.memo(function HatModel(props) {
  // Use React.memo for performance optimization
  const { nodes, materials } = useGLTF("/models/globe.glb");

  const modelRef = useRef();

  useFrame(() => {
    modelRef.current.rotation.y += 0.007;
  });
  return (
    <group ref={modelRef} {...props} dispose={null} scale={[1.8, 1.8, 1.8]} rotation={[0.4, -1, 0]} position={[0, 1, 0]}>
      <group name="Scene">
        <group name="GLTF_SceneRootNode" rotation={[0.031, 0, 0.064]}>
          <group name="Clouds_1" rotation={[0.384, 0.424, 0.042]}>
            <mesh
              name="Object_4"
              castShadow
              receiveShadow
              geometry={nodes.Object_4.geometry}
              material={materials.Clouds}
            />
          </group>
          <group name="Planet_2" rotation={[0.384, 0.424, 0.042]}>
            <mesh
              name="Object_6"
              castShadow
              receiveShadow
              geometry={nodes.Object_6.geometry}
              material={materials.Planet}
            />
          </group>
        </group>
      </group>
    </group>
  );
});

export default HatModel;
useGLTF.preload("/models/globe.glb");
